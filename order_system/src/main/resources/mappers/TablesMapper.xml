<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.newer.order_system.mapper.TablesMapper">

    <!-- 查找所有桌台 -->
    <select id="selectAll" resultType="com.newer.order_system.pojo.Table">
        select * from tables
    </select>

    <!-- 根据桌台id查找桌台 -->
    <select id="findByID" parameterType="java.lang.Long" resultType="com.newer.order_system.pojo.Table">
        select * from tables where id = #{from}
    </select>

    <!-- 添加桌台 -->
    <insert id="insertTable" parameterType="String">
        insert into tables (title) values (#{title})
    </insert>

    <!-- 更换桌台名 -->
    <update id="updateTableName">
        update tables set title = #{title} where id = #{id}
    </update>

    <!-- 修改桌台人数 -->
    <update id="updateTableNum">
        update tables set num = #{num} where id = #{id}
    </update>

    <!-- 删除桌台 -->
    <delete id="deleteTable" parameterType="java.lang.Long">
        delete from tables where id = #{id}
    </delete>

    <!-- 关闭桌台 -->
    <update id="tableOff" parameterType="java.lang.Long">
        update tables set num=0, status='OFF' where id = #{id}
    </update>

    <!-- 开启桌台 -->
    <update id="tableOn" parameterType="java.lang.Long">
        update tables set  status='ON' where id = #{id}
    </update>

    <!-- 根据桌台id查找当前桌台订单信息 -->
    <resultMap id="bills" type="com.newer.order_system.pojo.Bill">
        <!-- column为数据库字段名，property为实体类中属性名 -->
        <id column="id" property="id"/>
        <result column="actual_money" property="actualMoney"/>
        <result column="employee_id" property="employeeId"/>
        <result column="member_id" property="memberId"/>
        <result column="table_id" property="tableId"/>
    </resultMap>
    <select id="findBillsByTableID" resultMap="bills" parameterType="java.lang.Long">
        select
            b.id
        from
            bills b
        left join
            tables t
        on
            b.table_id = t.id &amp;&amp; b.status = '未支付';
    </select>

    <!-- 根据订单id修改当前订单桌台 -->
    <select id="updateTableAndBillRelationshipByBillId">
        update bills set table_id=#{tableId} where id=#{billId};
    </select>

    <!-- 根据订单id查找当前订单商品 -->
    <select id="findProductsByTableID" parameterType="java.lang.Long" resultType="com.newer.order_system.pojo.Product">
        select
            pbd.id, pbd.title, pbd.kind, pbd.price, pbd.sales, pbd.status, pbd.repertory
        from
            bills b
                left join
            ( select
                 bd.bill_id ,
                     p.id, p.title, p.kind, p.price, p.sales, p.status, p.repertory,
                 bd.count
            from
                 bills_detail bd
                     left join
                 products p
                 on
                     p.id = bd.product_id ) pbd
            on
                #{billId} = pbd.bill_id;
    </select>

    <!-- 根据账单id查询商品id集合 -->
    <select id="findProductIds" parameterType="java.lang.Long" resultType="java.lang.Long"><!-- 当查询结果为List时，
                                                                                                  需要将resultType改成相应类型，否则报错 -->
        select product_id from bills_detail where bill_id=#{billId}
    </select>

    <!-- 添加菜品 -->
    <insert id="insertProduct">
        insert into bills_detail(bill_id, product_id, count) values (#{billId},#{productId},#{count});
    </insert>

    <!-- 修改商品数量 -->
    <update id="updateProductCount">
        update bills_detail set count = count + #{count} where product_id = #{productId}
    </update>

    <!-- 删除当前订单内的商品 -->
    <delete id="deleteProduct" >
        delete from bills_detail where bill_id=#{billId} &amp;&amp; product_id=#{productId}
    </delete>




</mapper>